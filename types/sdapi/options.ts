export interface SDCheckpoint {
  title: string
  model_name: string
  hash: string | null
  sha256: string | null
  filename: string
}

export interface SDOptions {
  samples_save: boolean // true
  samples_format: string // png
  samples_filename_pattern: string // ''
  save_images_add_number: boolean // true
  grid_save: boolean // true
  grid_format: string // png
  grid_extended_filename: boolean // false
  grid_only_if_multiple: boolean // true
  grid_prevent_empty_spots: boolean // false
  grid_zip_filename_pattern: string // ''
  n_rows: number // -1
  font: string // ''
  grid_text_active_color: string // #000000
  grid_text_inactive_color: string // #999999
  grid_background_color: string // #ffffff
  enable_pnginfo: boolean // true
  save_txt: boolean // false
  save_images_before_face_restoration: boolean // false
  save_images_before_highres_fix: boolean // false
  save_images_before_color_correction: boolean // false
  save_mask: boolean // false
  save_mask_composite: boolean // false
  jpeg_quality: number // 80
  webp_lossless: boolean // false
  export_for_4chan: boolean // true
  img_downscale_threshold: number // 4
  target_side_length: number // 4000
  img_max_size_mp: number // 200
  use_original_name_batch: boolean // true
  use_upscaler_name_as_suffix: boolean // false
  save_selected_only: boolean // true
  save_init_img: boolean // false
  temp_dir: string // ''
  clean_temp_dir_at_start: boolean // false
  save_incomplete_images: boolean // false
  outdir_samples: string // ''
  outdir_txt2img_samples: string // outputs/txt2img-images
  outdir_img2img_samples: string // outputs/img2img-images
  outdir_extras_samples: string // outputs/extras-images
  outdir_grids: string // ''
  outdir_txt2img_grids: string // outputs/txt2img-grids
  outdir_img2img_grids: string // outputs/img2img-grids
  outdir_save: string // log/images
  outdir_init_images: string // outputs/init-images
  save_to_dirs: boolean // true
  grid_save_to_dirs: boolean // true
  use_save_to_dirs_for_ui: boolean // false
  directories_filename_pattern: string // '[date]'
  directories_max_prompt_words: number // 8
  ESRGAN_tile: number // 192
  ESRGAN_tile_overlap: number // 8
  realesrgan_enabled_models: string[] // ['R-ESRGAN 4x+', 'R-ESRGAN 4x+ Anime6B']
  upscaler_for_img2img: string // string
  face_restoration: boolean // false
  face_restoration_model: string // CodeFormer
  code_former_weight: number // 0.5
  face_restoration_unload: boolean // false
  auto_launch_browser: string // Local
  show_warnings: boolean // false
  show_gradio_deprecation_warnings: boolean // true
  memmon_poll_rate: number // 8
  samples_log_stdout: boolean // false
  multiple_tqdm: boolean // true
  print_hypernet_extra: boolean // false
  list_hidden_files: boolean // true
  disable_mmap_load_safetensors: boolean // false
  hide_ldm_prints: boolean // true
  api_enable_requests: boolean // true
  api_forbid_local_requests: boolean // true
  api_useragent: string // ''
  unload_models_when_training: boolean // false
  pin_memory: boolean // false
  save_optimizer_state: boolean // false
  save_training_settings_to_txt: boolean // true
  dataset_filename_word_regex: string // ''
  dataset_filename_join_string: string // ''
  training_image_repeats_per_epoch: number // 1
  training_write_csv_every: number // 500
  training_xattention_optimizations: boolean // false
  training_enable_tensorboard: boolean // false
  training_tensorboard_save_images: boolean // false
  training_tensorboard_flush_every: number // 120
  sd_model_checkpoint: string // string
  sd_checkpoints_limit: number // 1
  sd_checkpoints_keep_in_cpu: boolean // true
  sd_checkpoint_cache: number // 0
  sd_unet: string // Automatic
  enable_quantization: boolean // false
  enable_emphasis: boolean // true
  enable_batch_seeds: boolean // true
  comma_padding_backtrack: number // 20
  CLIP_stop_at_last_layers: number // 1
  upcast_attn: boolean // false
  randn_source: string // GPU
  tiling: boolean // false
  hires_fix_refiner_pass: string // second pass
  sdxl_crop_top: number // 0
  sdxl_crop_left: number // 0
  sdxl_refiner_low_aesthetic_score: number // 2.5
  sdxl_refiner_high_aesthetic_score: number // 6
  sd_vae_explanation: string // <abbr title='Variational autoencoder'>VAE</abbr> is a neural network that transforms a standard <abbr title='red/green/blue'>RGB</abbr>\nimage into latent space representation and back. Latent space representation is what stable diffusion is working on during sampling\n(i.e. when the progress bar is between empty and full). For txt2img, VAE is used to create a resulting image after the sampling is finished.\nFor img2img, VAE is used to process user's input image before the sampling, and to create an image after sampling.
  sd_vae_checkpoint_cache: number // 0
  sd_vae: string // Automatic
  sd_vae_overrides_per_model_preferences: boolean // true
  auto_vae_precision: boolean // true
  sd_vae_encode_method: string // Full
  sd_vae_decode_method: string // Full
  inpainting_mask_weight: number // 1
  initial_noise_multiplier: number // 1
  img2img_extra_noise: number // 0
  img2img_color_correction: boolean // false
  img2img_fix_steps: boolean // false
  img2img_background_color: string // #ffffff
  img2img_editor_height: number // 720
  img2img_sketch_default_brush_color: string // #ffffff
  img2img_inpaint_mask_brush_color: string // #ffffff
  img2img_inpaint_sketch_default_brush_color: string // #ffffff
  return_mask: boolean // false
  return_mask_composite: boolean // false
  cross_attention_optimization: string // Automatic
  s_min_uncond: number // 0
  token_merging_ratio: number // 0
  token_merging_ratio_img2img: number // 0
  token_merging_ratio_hr: number // 0
  pad_cond_uncond: boolean // false
  persistent_cond_cache: boolean // true
  batch_cond_uncond: boolean // true
  use_old_emphasis_implementation: boolean // false
  use_old_karras_scheduler_sigmas: boolean // false
  no_dpmpp_sde_batch_determinism: boolean // false
  use_old_hires_fix_width_height: boolean // false
  dont_fix_second_order_samplers_schedule: boolean // false
  hires_fix_use_firstpass_conds: boolean // false
  use_old_scheduling: boolean // false
  interrogate_keep_models_in_memory: boolean // false
  interrogate_return_ranks: boolean // false
  interrogate_clip_num_beams: number // 1
  interrogate_clip_min_length: number // 24
  interrogate_clip_max_length: number // 48
  interrogate_clip_dict_limit: number // 1500
  interrogate_clip_skip_categories: string[] // []
  interrogate_deepbooru_score_threshold: number // 0.5
  deepbooru_sort_alpha: boolean // true
  deepbooru_use_spaces: boolean // true
  deepbooru_escape: boolean // true
  deepbooru_filter_tags: string // ''
  extra_networks_show_hidden_directories: boolean // true
  extra_networks_hidden_models: string // When searched
  extra_networks_default_multiplier: number // 1
  extra_networks_card_width: number // 0
  extra_networks_card_height: number // 0
  extra_networks_card_text_scale: number // 1
  extra_networks_card_show_desc: boolean // true
  extra_networks_add_text_separator: string // ''
  ui_extra_networks_tab_reorder: string // ''
  textual_inversion_print_at_load: boolean // false
  textual_inversion_add_hashes_to_infotext: boolean // true
  sd_hypernetwork: string // None
  localization: string // None
  gradio_theme: string // Default
  gradio_themes_cache: boolean // true
  gallery_height: string // ''
  return_grid: boolean // true
  do_not_show_images: boolean // false
  send_seed: boolean // true
  send_size: boolean // true
  js_modal_lightbox: boolean // true
  js_modal_lightbox_initially_zoomed: boolean // true
  js_modal_lightbox_gamepad: boolean // false
  js_modal_lightbox_gamepad_repeat: number // 250
  show_progress_in_title: boolean // true
  samplers_in_dropdown: boolean // true
  dimensions_and_batch_together: boolean // true
  keyedit_precision_attention: number // 0.1
  keyedit_precision_extra: number // 0.05
  keyedit_delimiters: string // '.,\\/!?%^*;:{}=`~()'
  keyedit_move: boolean // true
  quicksettings_list: string[] // ['sd_model_checkpoint']
  ui_tab_order: string[] // []
  hidden_tabs: string[] // []
  ui_reorder_list: string[] // []
  hires_fix_show_sampler: boolean // false
  hires_fix_show_prompts: boolean // false
  disable_token_counters: boolean // false
  add_model_hash_to_info: boolean // true
  add_model_name_to_info: boolean // true
  add_user_name_to_info: boolean // false
  add_version_to_infotext: boolean // true
  disable_weights_auto_swap: boolean // true
  infotext_styles: string // Apply if any
  show_progressbar: boolean // true
  live_previews_enable: boolean // true
  live_previews_image_format: string // png
  show_progress_grid: boolean // true
  show_progress_every_n_steps: number // 10
  show_progress_type: string // Approx NN
  live_preview_allow_lowvram_full: boolean // false
  live_preview_content: string // Prompt
  live_preview_refresh_period: number // 1000
  live_preview_fast_interrupt: boolean // false
  hide_samplers: string[] // []
  eta_ddim: number // 0
  eta_ancestral: number // 1
  ddim_discretize: string // uniform
  s_churn: number // 0
  s_tmin: number // 0
  s_tmax: number // 0
  s_noise: number // 1
  k_sched_type: string // Automatic
  sigma_min: number // 0
  sigma_max: number // 0
  rho: number // 0
  eta_noise_seed_delta: number // 0
  always_discard_next_to_last_sigma: boolean // false
  sgm_noise_multiplier: boolean // false
  uni_pc_variant: string // bh1
  uni_pc_skip_type: string // time_uniform
  uni_pc_order: number // 3
  uni_pc_lower_order_final: boolean // true
  postprocessing_enable_in_main_ui: string[] // []
  postprocessing_operation_order: string[] // []
  upscaling_max_images_in_cache: number // 5
  disabled_extensions: string[] // []
  disable_all_extensions: string // none
  restore_config_state_file: string // ''
  sd_checkpoint_hash: string // ''
}